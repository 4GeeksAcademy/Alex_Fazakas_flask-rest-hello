"""empty message

Revision ID: 89058746a28e
Revises: ea1ed81c35a5
Create Date: 2024-02-20 08:58:48.535748

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '89058746a28e'
down_revision = 'ea1ed81c35a5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('vehicle',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('model', sa.String(length=100), nullable=True),
    sa.Column('length', sa.Integer(), nullable=True),
    sa.Column('cargo', sa.Integer(), nullable=True),
    sa.Column('speed', sa.Integer(), nullable=True),
    sa.Column('crew', sa.Integer(), nullable=True),
    sa.Column('passengers', sa.Integer(), nullable=True),
    sa.Column('manufacturer', sa.Enum('Corellia Mining Corporation', 'SoroSuub Corporation', 'Incom Corporation', 'Sienar Fleet Systems', ' Ubrikkian Industries', name='manufacturer'), nullable=True),
    sa.Column('character_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['character.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('favorites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('character_id', sa.Integer(), nullable=True),
    sa.Column('planet_id', sa.Integer(), nullable=True),
    sa.Column('vehicle_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['character.id'], ),
    sa.ForeignKeyConstraint(['planet_id'], ['planet.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicle.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('favorito')
    with op.batch_alter_table('character', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.String(length=150), nullable=False))
        batch_op.add_column(sa.Column('birth_year', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('gender', sa.Enum('male', 'female', 'other', name='gender'), nullable=False))
        batch_op.add_column(sa.Column('height', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('weight', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('planet_id', sa.Integer(), nullable=True))
        batch_op.alter_column('eye_color',
               existing_type=postgresql.ENUM('verdes', 'azules', name='EyeColor'),
               type_=sa.Enum('blue', 'brown', 'green', 'black', 'other', name='eyes'),
               existing_nullable=False)
        batch_op.alter_column('hair_color',
               existing_type=postgresql.ENUM('negro', 'rubio', name='HairColor'),
               type_=sa.Enum('blond', 'brown', 'ginger', 'black', 'other', name='hair'),
               existing_nullable=False)
        batch_op.create_unique_constraint(None, ['name'])
        batch_op.create_foreign_key(None, 'planet', ['planet_id'], ['id'])
        batch_op.drop_column('genero')
        batch_op.drop_column('nombre')

    with op.batch_alter_table('planet', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('diameter', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('climate', sa.Enum('temperate', 'tropical', 'arid', 'frozen', 'murky', name='climate'), nullable=True))
        batch_op.add_column(sa.Column('surface_water', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('orbital_period', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('rotation_period', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('gravity', sa.String(length=50), nullable=True))
        batch_op.alter_column('terrain',
               existing_type=sa.INTEGER(),
               type_=sa.Enum('jungle, rainforests', 'grasslands, mountains', 'ocean', 'desert', 'tundra', 'ice caves, mountain ranges', 'forests, mountains, lakes', 'swamp, jungles', 'other', name='terrain'),
               nullable=True)
        batch_op.alter_column('population',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.create_unique_constraint(None, ['name'])

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('username', sa.String(length=50), nullable=False))
        batch_op.create_unique_constraint(None, ['username'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('username')

    with op.batch_alter_table('planet', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('population',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('terrain',
               existing_type=sa.Enum('jungle, rainforests', 'grasslands, mountains', 'ocean', 'desert', 'tundra', 'ice caves, mountain ranges', 'forests, mountains, lakes', 'swamp, jungles', 'other', name='terrain'),
               type_=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('gravity')
        batch_op.drop_column('rotation_period')
        batch_op.drop_column('orbital_period')
        batch_op.drop_column('surface_water')
        batch_op.drop_column('climate')
        batch_op.drop_column('diameter')
        batch_op.drop_column('name')

    with op.batch_alter_table('character', schema=None) as batch_op:
        batch_op.add_column(sa.Column('nombre', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('genero', postgresql.ENUM('masculino', 'femenino', name='Genero'), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('hair_color',
               existing_type=sa.Enum('blond', 'brown', 'ginger', 'black', 'other', name='hair'),
               type_=postgresql.ENUM('negro', 'rubio', name='HairColor'),
               existing_nullable=False)
        batch_op.alter_column('eye_color',
               existing_type=sa.Enum('blue', 'brown', 'green', 'black', 'other', name='eyes'),
               type_=postgresql.ENUM('verdes', 'azules', name='EyeColor'),
               existing_nullable=False)
        batch_op.drop_column('planet_id')
        batch_op.drop_column('weight')
        batch_op.drop_column('height')
        batch_op.drop_column('gender')
        batch_op.drop_column('birth_year')
        batch_op.drop_column('name')

    op.create_table('favorito',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('planetId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('characterId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['characterId'], ['character.id'], name='favorito_characterId_fkey'),
    sa.ForeignKeyConstraint(['planetId'], ['planet.id'], name='favorito_planetId_fkey'),
    sa.PrimaryKeyConstraint('id', name='favorito_pkey')
    )
    op.drop_table('favorites')
    op.drop_table('vehicle')
    # ### end Alembic commands ###
